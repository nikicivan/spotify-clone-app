{"version":3,"sources":["spotify.js","pages/login/Login.js","components/sidebar-options/SidebarOptions.js","contextAPI/stateProvider.js","components/sidebar/Sidebar.js","components/header/Header.js","components/songRow/SongRow.js","components/body/Body.js","components/footer/Footer.js","pages/player/Player.js","App.js","serviceWorker.js","contextAPI/reducer.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","SidebarOptions","title","Icon","StateProviderContext","createContext","StateProvider","initialState","reducer","children","Provider","value","useReducer","useStateProviderValue","useContext","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","index","key","name","Header","user","placeholder","type","Avatar","images","url","display_name","SongRow","track","album","artists","artist","Body","spotify","discover_weekly","description","fontSize","tracks","item","Footer","Grid","container","spacing","xs","Slider","Player","SpotifyWebApi","App","token","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","then","getUserPlaylists","getPlaylist","response","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","action","ReactDOM","render","StrictMode","playing","top_artist","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.73327fda.chunk.js","sourcesContent":["// https://developer.spotify.com/documentation/web-playback-sdk/quick-start/#\r\n\r\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\n// const redirectUri = \"http://localhost:3000/\";\r\nconst redirectUri = \"https://nikicivan.github.io/spotify-clone-app\"\r\n\r\nconst clientId = \"dc0eb896d49c44bc9c71f2217c2db72a\";\r\n\r\nconst scopes = [\r\n    \"user-read-currently-playing\",\r\n    \"user-read-recently-played\",\r\n    \"user-read-playback-state\",\r\n    \"user-top-read\",\r\n    \"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromUrl = () => {\r\n    return window.location.hash\r\n        .substring(1)\r\n        .split('&')\r\n        .reduce((initial, item) => {\r\n            // #accessToken=mysupersecrettoken&name=name\r\n            let parts = item.split('=');\r\n            initial[parts[0]] = decodeURIComponent(parts[1]);\r\n            return initial;\r\n        }, {});\r\n}\r\n\r\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;","import React from 'react';\r\nimport './login.css';\r\nimport { loginUrl } from '../../spotify';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className=\"login\">\r\n            {/* Spotify logo */}\r\n            <img src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt=\"logo\" />            \r\n            {/* Login with spotify button */}\r\n            <a href={loginUrl}>LOGIN WITH SPOTIFY BUTTON</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './sidebarOptions.css';\r\n\r\nconst SidebarOptions = ({ title, Icon }) => {\r\n    return (\r\n        <div className=\"sidebarOptions\">\r\n            {Icon && <Icon className=\"sidebarOption-icon\" />}\r\n            {Icon ? <h4>{title}</h4> : <p>{title}</p> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOptions;\r\n","import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nexport const StateProviderContext = createContext();\r\n\r\nexport const StateProvider = ({ initialState, reducer, children }) => (\r\n    <StateProviderContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateProviderContext.Provider>\r\n);\r\n\r\nexport const useStateProviderValue = () => useContext(StateProviderContext);","import React from 'react';\r\nimport './sidebar.css';\r\nimport SidebarOptions from '../sidebar-options/SidebarOptions';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\nimport { useStateProviderValue } from '../../contextAPI/stateProvider';\r\n\r\nconst Sidebar = () => {\r\n    const [{ playlists }] = useStateProviderValue(); \r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <img className=\"sidebar-logo\" src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt=\"spotify_logo\"/>\r\n            <SidebarOptions Icon={HomeIcon} title=\"Home\" />\r\n            <SidebarOptions Icon={SearchIcon} title=\"Search\" />\r\n            <SidebarOptions Icon={LibraryMusicIcon} title=\"Your Library\" />\r\n            <br />\r\n            <strong className=\"sidebar-title\">PLAYLISTS</strong>\r\n            <hr />\r\n            {playlists?.items?.map((playlist, index) => (\r\n                <SidebarOptions key={index} title={playlist.name} />\r\n            \r\n            ))}                            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport './header.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { useStateProviderValue } from '../../contextAPI/stateProvider';\r\n\r\nconst Header = () => {\r\n\r\n    const [{user}] = useStateProviderValue();\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header-left\">\r\n                <SearchIcon />\r\n                <input placeholder=\"search for Artists or Songs\" type=\"text\"/>\r\n            </div>\r\n            <div className=\"header-right\">\r\n                <Avatar src={user?.images[0]?.url} alt={user?.display_name}/>\r\n                <h4>{user?.display_name}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './songRow.css';\r\n\r\nconst SongRow = ({ track }) => {\r\n    return (\r\n        <div className=\"songRow\">\r\n            <img className=\"songRow-album\" src={track.album.images[0].url} alt=\"track_album\"/>\r\n            <div className=\"songRow-info\">\r\n                <h1>{track.name}</h1>\r\n    <p>{track.artists.map((artist) => artist.name).join(\", \")} -{\" \"} {track.album.name}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongRow;\r\n","import React from 'react';\r\nimport './body.css';\r\nimport Header from '../header/Header';\r\nimport { useStateProviderValue } from '../../contextAPI/stateProvider';\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport SongRow from '../songRow/SongRow';\r\n\r\nconst Body = ({ spotify }) => {\r\n\r\n    const [{discover_weekly}] = useStateProviderValue();\r\n\r\n    return (\r\n        <div className=\"body\">\r\n            <Header spotify={spotify}/>\r\n            <div className=\"body-info\">\r\n                <img src={discover_weekly?.images[0].url} alt=\"discover_weekly\"/>\r\n                <div className=\"body-infoText\">\r\n                    <strong>PLAYLIST</strong>\r\n                    <h2>Discover weekly</h2>\r\n                    <p>{discover_weekly?.description}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"body-songs\">\r\n                <div className=\"body-icon\">\r\n                    <PlayCircleFilledIcon className=\"body-shuffle\"/>\r\n                    <FavoriteIcon fontSize=\"large\"/>\r\n                    <MoreHorizIcon />\r\n                </div>\r\n                {discover_weekly?.tracks.items.map((item,index) => (\r\n                    <SongRow key={index} track={item.track} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body;\r\n","import React from 'react';\r\nimport './footer.css';\r\n\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport { Grid, Slider } from '@material-ui/core';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer-left\">\r\n               <img className=\"footer-albumLogo\" src=\"https://upload.wikimedia.org/wikipedia/en/7/74/Usher_-_Confessions_album_cover.jpg\" alt=\"\"/>\r\n               <div className=\"footer-songInfo\">\r\n                   <h4>Yeah!</h4>\r\n                    <p>Usher</p>\r\n               </div>\r\n            </div>\r\n            <div className=\"footer-center\">\r\n                <ShuffleIcon className=\"footer-green\"/>\r\n                <SkipPreviousIcon className=\"footer-icon\" />\r\n                <PlayCircleOutlineIcon fontSize=\"large\" className=\"footer-icon\" />\r\n                <SkipNextIcon className=\"footer-icon\" />\r\n                <RepeatIcon className=\"footer-green\" />\r\n            </div>\r\n            <div className=\"footer-right\">\r\n                <Grid container spacing={2}>\r\n                    <Grid item>\r\n                        <PlaylistPlayIcon />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <VolumeDownIcon />\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Slider />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './player.css';\r\nimport Sidebar from '../../components/sidebar/Sidebar';\r\nimport Body from '../../components/body/Body';\r\nimport Footer from '../../components/footer/Footer';\r\n\r\nconst Player = ({ spotify }) => {\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"player-body\">                \r\n                <Sidebar />\r\n                <Body spotify={spotify}/>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;\r\n","import React, { useEffect } from 'react';\n\nimport './App.css';\nimport Login from './pages/login/Login';\nimport { getTokenFromUrl } from './spotify';\nimport Player from './pages/player/Player';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { useStateProviderValue } from './contextAPI/stateProvider'; \n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {  \n  const [{ token }, dispatch] = useStateProviderValue();\n\n  //run code based on given condition\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n    if (_token) {\n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token\n      });\n\n      spotify.setAccessToken(_token);\n\n      spotify.getMe().then(user => {\n        dispatch({\n          type: 'SET_USER',\n          user: user,\n        });\n      });\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: 'SET_PLAYLIST',\n          playlists: playlists,\n        });\n      });\n      spotify.getPlaylist('37i9dQZF1DX4wta20PHgwo').then(response => {\n        dispatch({\n          type: 'SET_DISCOVER_WEEKLY',\n          discover_weekly: response,\n        });\n      });\n    }\n    // eslint-disable-next-line    \n  }, []);\n\n  return (\n    <div className=\"app\">    \n    {\n      token ? (\n        <Player spotify={spotify}/>\n      ) : (\n        <Login />\n      )\n    }  \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n    user: null,\r\n    playlists: [],\r\n    playing: false,\r\n    discover_weekly: null,\r\n    top_artist: null,\r\n    item: null,\r\n    // Delete after developing\r\n    token: null\r\n};\r\n\r\nconst reducer = (state, action) => {    \r\n    switch(action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        case 'SET_TOKEN':\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        case 'SET_PLAYLIST':\r\n            return {\r\n                ...state,\r\n                playlists: action.playlists,\r\n            }\r\n        case 'SET_DISCOVER_WEEKLY':\r\n            return {\r\n                ...state,\r\n                discover_weekly: action.discover_weekly,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './contextAPI/stateProvider';\nimport reducer, { initialState } from './contextAPI/reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}